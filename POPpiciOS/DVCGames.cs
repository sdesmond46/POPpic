// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using POPpicLibrary;
using MonoTouch.Dialog;
using System.Collections.Generic;
using System.Linq;
using System.Drawing;

namespace POPpiciOS
{
	public partial class DVCGames : DialogViewController, IRepositoryChangedListener
	{
		GameRepository repository;
		public void RepositoryChanged (GameRepository repository)
		{
			this.repository = repository;
		}

		public POPpicLibrary.MyGamesViewModel.ListType ListType { get; set; }
		RootElement rootElement;
		public DVCGames (IntPtr handle) : base (handle)
		{
			Root = rootElement = new RootElement ("Games") {
				new Section (MyGamesViewModel.GetGameTypeDescription(ListType)) {
					new ActivityElement(),
				}
			};

		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			var addButton = new UIBarButtonItem (UIBarButtonSystemItem.Add);
			addButton.Clicked += (s, ev) =>  Console.WriteLine("Button Clicked!");
			var trophyButton = new UIBarButtonItem (UIBarButtonSystemItem.Action);
			trophyButton.Clicked += (s, ev) => {
			};

			this.NavigationItem.RightBarButtonItems = new UIBarButtonItem[] {
				addButton,
				trophyButton
			};
		}

		IList<GameViewModel> games;
		public void SetGameList(IList<GameViewModel> games) {
			InvokeOnMainThread (() => {
				this.games = games;
				var newRoot = new RootElement("Games");
				var mainSection = new Section(MyGamesViewModel.GetGameTypeDescription(ListType)) ;
				newRoot.Add(mainSection);

				StringElement ele = new StringElement("ABC", () => {
					Console.WriteLine("String clicked");
				});
				// mainSection.Add(ele);
				// mainSection.Add(new UIViewElement("", new UILabel(new RectangleF(0, 0, 100, 100)) { Text = "ABCDEFEFDF"}, false));
				foreach (var game in this.games) {
					var cell =  TestTVC.Create();

					cell.SetData(game);
					var customelement = new CustomView(cell);
					mainSection.Add (customelement);
				}

				Root = this.rootElement = newRoot;
			});

		}
//
//		public override Source CreateSizingSource (bool unevenRows)
//		{
//			return new CustomSource(this);
//		}
//
//		private class CustomSource : DialogViewController.Source
//		{
//			public CustomSource (DVCGames controller) : base (controller)
//			{}
//
//			public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
//			{
//				// You handle row selected here
//				base.RowSelected (tableView, indexPath);
//			}
//		}
	}



	public class CustomView : UIViewElement {
		public override void Selected(DialogViewController dvc, UITableView table, NSIndexPath index) {
			Console.WriteLine ("Selected");
		}

		public CustomView(UIView cell) : base("", cell, false) {
		}

		public override UITableViewCell GetCell (UITableView tv)
		{
			var baseCell = base.GetCell (tv);
			return baseCell;
		}
	}
}
